@startuml BackendArchitecture
title "Mar-1 Hotel System (MHS) Architecture"
' Using PlantUML Deployment Diagram

rectangle Frontend as "Frontend Layer" {
    node Pages as "Views/Pages" {
        rectangle "Welcome" as wc #LightBlue
        rectangle "Login" as l #LightBlue
        rectangle "Register" as r #LightBlue
        rectangle "Booking" as b #LightBlue
        rectangle "Booking Summary" as bs #LightBlue
        rectangle "Customer\nDashboard" as c #LightBlue
        rectangle "Manager\nDashboard" as m #LightBlue
        rectangle "Employee\nDashboard" as e #LightBlue

        wc --> b : booking a room
        wc --> l : logging in
        wc --> r: signing up

        b -down-> bs : booking successful
        r <-left-> l

        l -down-> c
        l --> m
        l --> e
    }
}


rectangle Backend as "Backend Layer" {
    together {
        package DM as "Domain Model" {
            file DM_C as "Classes" {
                card "JPA annotation" #LightBlue
            }
        }
        node DAO as "Data Access Object (DAO)"
        database DB as "Database" #Yellow


        DM --right-> DAO
        DAO --> DB
        DB --> DAO

        package Service as "Service Layer" {
            note as SN
            Business Methods that tries
            to obtain data from the database
            using DAO.
            Return <b>Object</b> to Controller
            end note
        }
        DAO -up-> Service : "returns data as Object"
        Service -left-> DAO : "uses"
    }
    package Controller as "Controller Layer: /endpoint" {
        note as CN
        Controls Endpoints
        > recieves HTTP Request (GET, POST)
        > calls Service Layer: Business Methods
        - convert Object to DTO
        < returns data as HTTP Response
        end note

        node DTO as "Data Transfer Object (DTO)" {
            card "RequestDTOs" #LightBlue
            card "ResponseDTOs" #LightBlue
        }

    }


    Service -up[#blue,bold]-> DTO : (2) converts Object to
    Service <-left[#blue,bold]- Controller : (1) calls service methods
}

Controller --[#blue,bold]up-> Frontend : (3) HTTP Response
Backend <-[#red]down- Frontend : (0) HTTP Request

skinparam Linetype ortho

@enduml